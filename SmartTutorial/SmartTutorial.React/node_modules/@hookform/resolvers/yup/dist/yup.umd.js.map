{"version":3,"file":"yup.umd.js","sources":["../src/yup.ts"],"sourcesContent":["import Yup from 'yup';\nimport { toNestError } from '@hookform/resolvers';\nimport { appendErrors, FieldError } from 'react-hook-form';\nimport { Resolver } from './types';\n\n/**\n * Why `path!` ? because it could be `undefined` in some case\n * https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n */\nconst parseErrorSchema = (\n  error: Yup.ValidationError,\n  validateAllFieldCriteria: boolean,\n) => {\n  return error.inner.reduce<Record<string, FieldError>>((previous, error) => {\n    if (!previous[error.path!]) {\n      previous[error.path!] = { message: error.message, type: error.type! };\n    }\n\n    if (validateAllFieldCriteria) {\n      previous[error.path!] = appendErrors(\n        error.path!,\n        validateAllFieldCriteria,\n        previous,\n        error.type!,\n        error.message,\n      ) as FieldError;\n    }\n\n    return previous;\n  }, {});\n};\n\nexport const yupResolver: Resolver = (\n  schema,\n  schemaOptions = {\n    abortEarly: false,\n  },\n  resolverOptions = {},\n) => async (values, context, options) => {\n  try {\n    if (schemaOptions.context && process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn(\n        \"You should not used the yup options context. Please, use the 'useForm' context object instead\",\n      );\n    }\n\n    const result = await schema[\n      resolverOptions.mode === 'sync' ? 'validateSync' : 'validate'\n    ](values, Object.assign({}, schemaOptions, { context }));\n\n    return {\n      values: result,\n      errors: {},\n    };\n  } catch (e) {\n    return {\n      values: {},\n      errors: toNestError(\n        parseErrorSchema(e, options.criteriaMode === 'all'),\n        options.fields,\n      ),\n    };\n  }\n};\n"],"names":["schema","schemaOptions","resolverOptions","abortEarly","values","context","options","process","env","NODE_ENV","console","warn","mode","Object","assign","result","errors","e","toNestError","error","validateAllFieldCriteria","criteriaMode","inner","reduce","previous","path","message","type","appendErrors","fields"],"mappings":"sYAgCqC,SACnCA,EACAC,EAGAC,mBAHAD,IAAAA,EAAgB,CACdE,YAAY,aAEdD,IAAAA,EAAkB,aACRE,EAAQC,EAASC,uDAErBL,EAAcI,SAAoC,gBAAzBE,QAAQC,IAAIC,UAEvCC,QAAQC,KACN,iHAIiBX,EACM,SAAzBE,EAAgBU,KAAkB,eAAiB,YACnDR,EAAQS,OAAOC,OAAO,GAAIb,EAAe,CAAEI,QAAAA,oBAFvCU,GAIN,MAAO,CACLX,OAAQW,EACRC,OAAQ,4EAEHC,GACP,MAAO,CACLb,OAAQ,GACRY,OAAQE,eAhDZC,EAiDuBF,EAhDvBG,EAgDmD,QAAzBd,EAAQe,aA9C3BF,EAAMG,MAAMC,OAAmC,SAACC,EAAUL,GAe/D,OAdKK,EAASL,EAAMM,QAClBD,EAASL,EAAMM,MAAS,CAAEC,QAASP,EAAMO,QAASC,KAAMR,EAAMQ,OAG5DP,IACFI,EAASL,EAAMM,MAASG,eACtBT,EAAMM,KACNL,EACAI,EACAL,EAAMQ,KACNR,EAAMO,UAIHF,GACN,KA+BGlB,EAAQuB,SAnDS,IACvBV,EACAC,KAqBmC"}